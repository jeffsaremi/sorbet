ClassDef{
  kind = class
  name = EmptyTree
  symbol = <C <U <root>>>
  ancestors = [ConstantLit{
      symbol = (class ::<todo sym>)
      orig = nullptr
    }]
  rhs = [
    ClassDef{
      kind = class
      name = UnresolvedConstantLit{
        cnst = <C <U MyClass>>
        scope = EmptyTree
      }
      symbol = <C <U <todo sym>>>
      ancestors = [ConstantLit{
          symbol = (class ::<todo sym>)
          orig = nullptr
        }]
      rhs = [
        EmptyTree
      ]
    }

    ClassDef{
      kind = module
      name = UnresolvedConstantLit{
        cnst = <C <U MyModule>>
        scope = EmptyTree
      }
      symbol = <C <U <todo sym>>>
      ancestors = []
      rhs = [
        EmptyTree
      ]
    }
  ]
}
